syntax = "proto3";

package api;

message CanAuthRequest {
    string login = 1;
    string password = 2;
    string ip = 3;
}

message CanAuthResponse {
    bool ok = 1;
}

message AddIpInListRequest {
    string ip = 1;
}

message AddIpInListResponse {}

message DeleteIpFromListRequest {
    string ip = 1;
}

message DeleteIpFromListResponse {}

message IsIpInListRequest {
    string ip = 1;
}

message IsIpInListResponse {
    bool ok = 1;
}

// message BucketRequest {
//     string login = 1;
//     string password = 2;
//     string ip = 3;
// }

// message BucketCountsResponse {
//     uint32 login = 1;
//     uint32 password = 2;
//     uint32 ip = 3;
// }

service Api {
    rpc AddIpInBlackList (AddIpInListRequest) returns (AddIpInListResponse) {};
    rpc AddIpInWhiteList (AddIpInListRequest) returns (AddIpInListResponse) {};
    rpc DeleteIpFromBlackList (DeleteIpFromListRequest) returns (DeleteIpFromListResponse) {};
    rpc DeleteIpFromWhiteList (DeleteIpFromListRequest) returns (DeleteIpFromListResponse) {};
    rpc IsIpInBlackList (IsIpInListRequest) returns (IsIpInListResponse) {};
    rpc IsIpInWhiteList (IsIpInListRequest) returns (IsIpInListResponse) {};
    rpc CanAuth(CanAuthRequest) returns (CanAuthResponse) {};

    // rpc ClearBucket(BucketRequest)      returns (None) {};

    // // For integration tests when need clean lists before run tests
    // rpc ClearBlackList(None)                returns (None) {};
    // rpc ClearWhiteList(None)                returns (None) {};

    // // For integration tests get all counts of all type of buckets
    // rpc CountBuckets(None)               returns (BucketCountsResponse) {};
}
